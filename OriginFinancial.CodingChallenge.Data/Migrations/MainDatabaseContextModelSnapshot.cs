// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OriginFinancial.CodingChallenge.Infra.Data.Context;

namespace OriginFinancial.CodingChallenge.Infra.Data.Migrations
{
    [DbContext(typeof(MainDatabaseContext))]
    partial class MainDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("OriginFinancial.CodingChallenge.Domain.Entity.Contract", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AutoInsuranceID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<int>("DisabilityInsuranceID")
                        .HasColumnType("int");

                    b.Property<int>("HomeInsuranceID")
                        .HasColumnType("int");

                    b.Property<int>("LifeInsuranceID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime");

                    b.HasKey("ID");

                    b.ToTable("Contract");
                });

            modelBuilder.Entity("OriginFinancial.CodingChallenge.Domain.Entity.Customer", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<int>("Dependents")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("FullName")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("House")
                        .HasColumnType("int");

                    b.Property<int?>("HouseOwnershipStatusID")
                        .HasColumnType("int");

                    b.Property<int>("Income")
                        .HasColumnType("int");

                    b.Property<int>("MaritalStatusID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime");

                    b.Property<int>("Vehicle")
                        .HasColumnType("int");

                    b.Property<int?>("VehicleYear")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("OriginFinancial.CodingChallenge.Domain.Entity.CustomerRiskQuestion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ContractID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CustomerID")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime");

                    b.Property<ulong>("RiskQuestionAnswer")
                        .HasColumnType("bit");

                    b.Property<int>("RiskQuestionID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ContractID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("RiskQuestionID");

                    b.ToTable("CustomerRiskQuestion");
                });

            modelBuilder.Entity("OriginFinancial.CodingChallenge.Domain.Entity.RiskQuestion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime");

                    b.Property<string>("Question")
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("StatusID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("RiskQuestion");
                });

            modelBuilder.Entity("OriginFinancial.CodingChallenge.Domain.Entity.CustomerRiskQuestion", b =>
                {
                    b.HasOne("OriginFinancial.CodingChallenge.Domain.Entity.Contract", "Contract")
                        .WithMany("CustomerRiskQuestions")
                        .HasForeignKey("ContractID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OriginFinancial.CodingChallenge.Domain.Entity.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OriginFinancial.CodingChallenge.Domain.Entity.RiskQuestion", "RiskQuestion")
                        .WithMany()
                        .HasForeignKey("RiskQuestionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
